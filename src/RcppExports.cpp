// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// r_uspr
int r_uspr(StringVector tree1, StringVector tree2, LogicalVector printMafs, LogicalVector countMafs, LogicalVector keepLabels, LogicalVector opt, LogicalVector protectB, LogicalVector tbrApprox, LogicalVector tbr, LogicalVector replug, LogicalVector uspr, LogicalVector approxEstimate, LogicalVector tbrEstimate, LogicalVector replugEstimate);
RcppExport SEXP _uspr_r_uspr(SEXP tree1SEXP, SEXP tree2SEXP, SEXP printMafsSEXP, SEXP countMafsSEXP, SEXP keepLabelsSEXP, SEXP optSEXP, SEXP protectBSEXP, SEXP tbrApproxSEXP, SEXP tbrSEXP, SEXP replugSEXP, SEXP usprSEXP, SEXP approxEstimateSEXP, SEXP tbrEstimateSEXP, SEXP replugEstimateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type tree1(tree1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type tree2(tree2SEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type printMafs(printMafsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type countMafs(countMafsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type keepLabels(keepLabelsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type opt(optSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type protectB(protectBSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type tbrApprox(tbrApproxSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type tbr(tbrSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type replug(replugSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type uspr(usprSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type approxEstimate(approxEstimateSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type tbrEstimate(tbrEstimateSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type replugEstimate(replugEstimateSEXP);
    rcpp_result_gen = Rcpp::wrap(r_uspr(tree1, tree2, printMafs, countMafs, keepLabels, opt, protectB, tbrApprox, tbr, replug, uspr, approxEstimate, tbrEstimate, replugEstimate));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_uspr_r_uspr", (DL_FUNC) &_uspr_r_uspr, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_uspr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
